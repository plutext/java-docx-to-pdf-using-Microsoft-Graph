<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>9</version>
  </parent>

	<groupId>org.plutext.graph-convert</groupId>
	<artifactId>office-to-pdf-using-Microsoft-Graph</artifactId>	
	<version>1.0.3-patched</version>
	
	<properties>
		<revision>1.0.3-patched</revision>
		<packaging.type>jar</packaging.type>
	    <!-- <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> -->
	    <!-- github server corresponds to entry in ~/.m2/settings.xml -->
	    <github.global.server>github</github.global.server>
	</properties>

    <packaging>pom</packaging>

    <name>office-to-pdf-using-Microsoft-Graph</name>
    
    <modules>
        <module>graph-convert-base</module>
        <module>without-graph-sdk-using-scribe</module>
        <module>without-graph-sdk-using-msal4j</module>
        <module>using-graph-sdk-core-only</module>
        <module>using-graph-sdk</module>
        <module>graph-convert-sample</module>
        <module>graph-convert-tests</module>
    </modules>
	
	<description>
		Demonstrate various approaches to using Microsoft Graph for OpenXML (docx/pptx/xlsx) to PDF conversion in Java.
	</description>
	<url>https://github.com/plutext/java-docx-to-pdf-using-Microsoft-Graph</url>
	<licenses>
	  <license>
	    <name>Apache 2</name>
	    <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
	    <distribution>repo</distribution>
	    <comments>A business-friendly OSS license</comments>
	  </license>
  	</licenses>
  	
	<developers>
		<developer>
			<name>Jason Harrop</name>
			<email>jason@plutext.org</email>
			<organization>Plutext</organization>
			<organizationUrl>http://www.plutext.com</organizationUrl>
		</developer>
	</developers>

	<distributionManagement>
		<repository>
			<id>nexus-cgoit-maven</id>
			<name>cgoit-maven</name>
			<url>https://nexus.cgo-it.de/repository/maven-releases</url>
		</repository>
	</distributionManagement>

	<scm>
	    <developerConnection>scm:git|git@github.com:plutext/java-docx-to-pdf-using-Microsoft-Graph.git</developerConnection>
      <tag>HEAD</tag>
  </scm>
	<inceptionYear>2020</inceptionYear>
    
    <build>
        <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            
			<!-- maven-javadoc-plugin seems to require large -Xmx so comment this
				out if your build is failing because you don't have enough -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<maxmemory>512m</maxmemory>
			        <additionalparam>-Xdoclint:none</additionalparam> 
                    <source>8</source>
				 </configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>                   
        </plugins>
    </build>


<profiles>
  <profile>
     <id>allow-snapshots</id>
        <activation><activeByDefault>true</activeByDefault></activation>
     <repositories>
       <repository>
         <id>snapshots-repo</id>
         <url>https://oss.sonatype.org/content/repositories/snapshots</url>
         <releases><enabled>false</enabled></releases>
         <snapshots><enabled>true</enabled></snapshots>
       </repository>
     </repositories>
   </profile>
</profiles>

</project>
